import csv
import random
import json
import pandas as pd
import numpy as np
import geopandas as gpd
import matplotlib.pyplot as plt
%matplotlib inline

from paho.mqtt import client as mqtt_client

broker = 'shredder.research.unlv.edu'
port = 8883
topic = "detectors/all/data"
# generate client ID with pub prefix randomly
client_id = f'python-mqtt-{random.randint(0, 100)}'
username = 'baxter'
password = 'vegas2021'

def connect_mqtt() -> mqtt_client:
    def on_connect(client, userdata, flags, rc):
        if rc == 0:
            print("Connected to MQTT Broker!")
        else:
            print("Failed to connect, return code %d\n", rc)

    client = mqtt_client.Client(client_id)
    client.username_pw_set(username, password)
    client.on_connect = on_connect
    client.connect(broker, port)
    return client

def publish(client):
    msg_count = 0
    while True:
        time.sleep(1)
        msg = f"messages: {msg_count}"
        result = client.publish(topic, msg)
        status = result[0]
        if status == 0:
            print(f"Send `{msg}` to topic `{topic}`")
        else:
            print(f"Failed to send message to topic {topic}")
        msg_count += 1

def subscribe(client: mqtt_client):
    def on_message(client, userdata, msg):
        message = json.loads(msg.payload)
        global gdf
        gdf = gpd.GeoDataFrame.from_features(message['features'])
        series1=gdf.iloc[0,:]
        gdf.to_csv('getdata7.csv', mode='w', encoding='utf-8')
        
    client.subscribe(topic)
    client.on_message = on_message
    
    
def run():
    client = connect_mqtt()
    subscribe(client)
    client.loop_forever()    
    
if __name__ == '__main__':
    run()
